package pb ;

//#####################################################
//心跳消息，不需要参数
//#####################################################
message C2GS_PingPong
{
}
message GS2C_PingPong
{
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
}

//#####################################################
//非游戏部分接口
//#####################################################

message C2GS_Login
{
    required int64          uid                     = 1;
    required int32          table_id                = 2;                //桌子号  
}

message GS2C_Login
{
    required int32          errorcode              = 1;
    optional string         session_id              = 2;
}

////////////////////////////////////////////////////////

//加入桌子
message C2GS_JoinTable {
    required int32      table_id                = 1;                //桌子号
    required int32      seat_id                 = 2;                //椅子号      
}

//玩家信息
message UsrInfo {
    required int64      uid                     = 1;    
    required string     weichat_nick            = 2;                //微信昵称
    required string     weichat_face_address    = 3;                //头像地址 
    required int64      big_gold                = 4;                //房卡
    required int64      gold                    = 5;                //游戏中的金币数
    required int32      sex                     = 6;                //性别    
    required string     ip                      = 7;                //IP地址    
    required int32      status                  = 8;                //状态 （0自由状态，1ready, 2正在打牌，3断线，4房主退出但未解散房间, 5  
    required int32      seatid                  = 9;                //位置	
}


//重连
message WeaveItem {
    required int64      weave_kind              = 1;                //吃碰杠后的套牌类型 1碰 2左杠，3右杠，4对门杠，5补杠，6暗杠，9左碰，10中碰，11右碰
    required int32      card_id                 = 2;                //牌值        
}

message ReconnectItem
{
    repeated int32      hand_cards              = 1;                //自己手中扑克
    repeated int32      hand_cnts               = 2;                //所有玩家的手中牌个数数组    

    repeated WeaveItem  weaves1                 = 3;                //自己套牌数组
    repeated WeaveItem  weaves2                 = 4;                //玩家2套牌数组
    repeated WeaveItem  weaves3                 = 5;                //玩家3套牌数组
    repeated WeaveItem  weaves4                 = 6;                //玩家4套牌数组

    repeated int32      dismiss_cards_1         = 7;                //自己丢弃的扑克
    repeated int32      dismiss_cards_2         = 8;                //玩家2丢弃的扑克
    repeated int32      dismiss_cards_3         = 9;                //家3丢弃的扑克
    repeated int32      dismiss_cards_4         = 10;                //玩家4丢弃的扑克    

    optional int32      current_uid             = 11;               //当前玩家
    optional int32      left_card_cnt           = 12;               //剩余张数
    optional int32      left_round              = 13;               //剩余局数   
 
    repeated int32      ji_cnts                 = 14;                //所有玩家打出去的鸡的个数（普通+冲锋）
    repeated int32      ji_types                = 15;                //所有玩家是否打出冲锋鸡，和责任鸡（1 冲锋鸡, 2 责任鸡, 0表示没有）        
    repeated int32      is_tingpais             = 16;                //所有玩家是否听牌数组 
    repeated int32      actions                 = 17;                //断线玩家的动作数组
    repeated int32      quemen                  = 18;                //缺门数组 
    repeated int32      user_dismiss_status     = 19;                //每个用户的回答解散房间状态 (0未提出解散，1表示未响应，2表示同意，3不同意 4 发起者)  	
}

//加入桌子响应
message GS2C_JoinTable {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    repeated UsrInfo    usr_info_list           = 2;                //同桌的所有玩家列表（包括旁观者）
    optional ReconnectItem  reconnect           = 3;                //断线重连 
    optional int32      banker_uid              = 4;                //房主用户       
}

////////////////////////////////////////////////////////

//加入桌子广播请求
message C2GS_JoinTableBroadcast {
}


//加入桌子广播
message GS2C_JoinTableBroadcast {
    required int32          errorcode           = 1 [default = 0];  //结果（成功==0）
    required UsrInfo        usr_info            = 2;                //玩家进入，状态ready
    optional int32          banker_uid          = 3;                //房主用户 
}

////////////////////////////////////////////////////////

//某个玩家断线回来了广播请求
message C2GS_BreakBackBroadcast {
}


//某个玩家断线回来了广播
message GS2C_BreakBackBroadcast {
    required int32          errorcode           = 1 [default = 0];  //结果（成功==0）
    required int32          break_uid           = 2;                //断线玩家 
}

////////////////////////////////////////////////////////

//离开桌子
message C2GS_LeaveTable {
    optional int32      leave_reason            = 1;                //原因 (0正常退出、1解散桌子)
}

//响应
message GS2C_LeaveTable {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    optional int32      leave_reason            = 2;                //原因 (0正常退出、1解散桌子)   
    optional int32      is_banker_no_dismiss    = 3;                //是否是房主未解散房间     
}

////////////////////////////////////////////////////////

//离开桌子广播请求
message C2GS_LeaveTableBroadcast {
}


//离开桌子广播
message GS2C_LeaveTableBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    required int64      uid                     = 2;  
    optional int32      leave_reason            = 3;                //原因 (0正常退出、1解散桌子) 
    optional int32      is_banker_no_dismiss    = 4;                //是否是房主未解散房间 
}

////////////////////////////////////////////////////////

//断线广播请求
message C2GS_BreakBroadcast {
}

//断线广播
message GS2C_BreakBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    required int64      uid                     = 2;  
}

////////////////////////////////////////////////////////

//#####################################################
//游戏部分接口
//#####################################################

//广播请求
message C2GS_RoundStartBroadcast {
}

//游戏一局开始广播
message GS2C_RoundStartBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    optional int32      left_round              = 2;                //剩余局数
    optional int32      left_cnt                = 3;                //剩下的牌数    
    optional int32      gold_now                = 4;                //当前金币    
    optional int32      banker_uid              = 5;                //庄家用户 
    repeated int32      hand_cards              = 6;                //手中扑克数组         
}

////////////////////////////////////////////////////////

//系统发单张牌请求
message C2GS_DispatchBroadcast {
}

//系统发单张牌广播
message GS2C_DispatchBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    optional int32      card                    = 2;                //牌     
    optional int32      dispatch_uid            = 3;                //发牌目标用户 
    optional int32      left_cnt                = 4;                //剩下的牌数
    optional int32      is_hu                   = 5;                //是否胡该张牌(明搂用)
    optional int32      is_gang                 = 6;                //是否杠该张牌(明搂用)        
}

////////////////////////////////////////////////////////

//出牌请求
message C2GS_Out {
    required int32      card                    = 1;                //牌
}

//出牌响应
message GS2C_Out {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
}

////////////////////////////////////////////////////////

//出牌广播请求
message C2GS_OutBroadcast {
}

//出牌广播
message GS2C_OutBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    optional int32      out_uid                 = 2;                //出牌用户     
    optional int32      card                    = 3;                //牌  
    optional int32      ji_type                 = 4;                //鸡类型 (1冲锋鸡，2普通鸡)
}

////////////////////////////////////////////////////////

//操作询问广播请求
message C2GS_OperateAskBroadcast {
}

//操作询问广播
message GS2C_OperateAskBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    optional int32      resume_uid              = 2;                //点击“过”之后，需要找到的焦点用户        
    optional int32      action_card             = 3;                //牌
    repeated int32      actions                 = 4;                //动作数组(0无动作，1左吃（吃的牌在左边），2中吃，3右吃，4碰，5杠，6明搂，7胡) 
    repeated int32      gang_cards              = 5;                //可杠牌扑克数组         
}

////////////////////////////////////////////////////////

//操作请求
message C2GS_Operate {
    required int32      operate_code            = 1;                //操作代码      (取消写0)
    required int32      operate_cardid          = 2;                //操作扑克    
}

//操作结果
message GS2C_Operate {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    optional int32      operate_code            = 2;                //操作代码      (取消写0)
}


//操作结果广播请求
message C2GS_OperateResultBroadcast {
}

//操作结果广播
message GS2C_OperateResultBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    optional int32      operate_uid             = 2;                //操作用户     
    optional int32      provide_uid             = 3;                //供应用户
    optional int32      operate_code            = 4;                //操作代码 (上次成功的结果) (1碰，2左杠，3右杠，4对门杠，5补杠，6暗杠，7听，8胡，9左碰，10中碰，11右碰)
    optional int32      operate_cardid          = 5;                //操作扑克  
    optional int32      is_zerenji              = 6;                //碰杠中是否有责任鸡   0 不是鸡，1责任鸡，2普通鸡
    optional int32      hu_type                 = 7;                //胡类型(1平胡， 2大对子， 3七对， 4龙七对， 5清一色， 6清七对， 7清大对， 8青龙背)  
    optional int32      gang_type               = 8;                //杠类型（1杠上花， 2杠上炮， 3枪杠胡）    
}

////////////////////////////////////////////////////////

//明搂询问可选牌请求 
message C2GS_MinglouAsk {
}

//听牌响应
message GS2C_MinglouAsk {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    repeated int32      can_discard_cards       = 2;                //可选要打出的牌数组        
}

//明搂请求 
message C2GS_Minglou {
}

//听牌响应
message GS2C_Minglou {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
}


//听牌广播请求
message C2GS_MinglouBroadcast {
}

//听牌广播
message GS2C_MinglouBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    optional int32      minglou_uid             = 2;                //明搂用户 
    repeated int32      minglou_cards           = 3;                //明搂听的牌数组                  
}

////////////////////////////////////////////////////////

//聊天
message C2GS_Chat {
    optional int32      chat_index              = 1;
}

//响应
message GS2C_Chat {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
}

////////////////////////////////////////////////////////

//聊天广播请求
message C2GS_ChatBroadcast {
}

//聊天广播
message GS2C_ChatBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    required int32      uid                     = 2; 
    required int32      chat_index              = 3;
}

////////////////////////////////////////////////////////

//解散房间询问广播
message C2GS_DismissAskBroadcast {
}

//解散房间询问广播
message GS2C_DismissAskBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    optional int32      ask_uid                 = 2;                //请求用户    
}

////////////////////////////////////////////////////////


//解散回答
message C2GS_DismissAnswer {
    optional int32      is_agree                = 1;                //是否同意
}

//解散回答响应
message GS2C_DismissAnswer {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
}

////////////////////////////////////////////////////////

//解散回答广播请求
message C2GS_DismissAnswerBroadcast {
}

//解散回答广播
message GS2C_DismissAnswerBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    required int64      uid                     = 2;                //应答玩家
    optional int32      is_agree                = 3;                //是否同意    
}

////////////////////////////////////////////////////////

//解散请求
message C2GS_DismissBroadcast {
}

//解散广播
message GS2C_DismissBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    optional int32      is_dismiss              = 2;                //是否结算      
}

////////////////////////////////////////////////////////

//语音请求
message C2GS_VoiceTalk {
    required bytes     voice_data              = 1; 
}

//语音响应
message GS2C_VoiceTalk {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
}

////////////////////////////////////////////////////////

//语音广播请求
message C2GS_VoiceTalkBroadcast {
}

//语音广播
message GS2C_VoiceTalkBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    required int64      uid                     = 2;                //说话玩家    
    required bytes      voice_data              = 3;     
}

////////////////////////////////////////////////////////

//聊天
message C2GS_ChatCustom {
    required string     chat_content           = 1;
}

//响应
message GS2C_ChatCustom {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
}

////////////////////////////////////////////////////////

//聊天广播请求
message C2GS_ChatCustomBroadcast {
}

//聊天广播
message GS2C_ChatCustomBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    required int32      uid                     = 2; 
    required string     chat_content            = 3;
}

////////////////////////////////////////////////////////

//准备请求
message C2GS_Ready {
}

//准备响应
message GS2C_Ready {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    required int32      banker_uid              = 2;
}

////////////////////////////////////////////////////////

//准备广播请求
message C2GS_ReadyBroadcast {
}

//准备广播通知
message GS2C_ReadyBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    required int64      uid                     = 2; 
}

////////////////////////////////////////////////////////

//准备请求
message C2GS_GetJuCnt {
    required int64      uid                     = 2; 
}

//准备响应
message GS2C_GetJuCnt {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    required int64      uid                     = 2;     
    optional int32      ju_win                  = 3;                //胜局 
    optional int32      ju_draw                 = 4;                //平局 
    optional int32      ju_lose                 = 5;                //败局        
}

////////////////////////////////////////////////////////

//详情每一项，kind
message LittleItem {
    required string     kind                    = 1;                //种类（小胡, 大对子, 七对, 龙七对, 清一色, 清七对, 清大对, 青龙背, 收热炮, 杠上花, 被抢杠, 抢杠胡, 冲锋鸡, 责任鸡, 普通鸡, 翻牌鸡, 金鸡, 闷杠, 碰杠，自杠）
    optional int32      color                   = 2;                //颜色(赢3家的 1,  赢1家的 2, 输 3家的3 ,输一家的 4)
    optional string     fen                     = 3;                //分值(+1表示加1分)
    optional int32      is_zhuang2bei           = 4;                //是否显示(庄*2）            
}

message DetailItem {
    required int64      uid                     = 1;
    repeated LittleItem weaves                  = 2;                //详细数组    
}

message ResultItem {
    required int64      uid                     = 1;
    repeated int32      hand_cards              = 2;                //手中扑克
    repeated WeaveItem  weaves                  = 3;                //套牌数组    
    optional int32      hupai_type              = 4;                //胡牌类型 0没叫 1有叫 2平胡， 3大对子， 4七对， 5龙七对， 6清一色， 7清七对， 8清大对， 9青龙背   
    optional int32      win_fan_cnt             = 5;                //赢的番数 
    optional int32      hupai_fangshi           = 6;                //胡牌方式 1自摸 2点炮 3放热跑 4杠上花 5抢杠胡（有杠上花就没有自摸）
    optional int32      ji_num                  = 7;                //打出的鸡牌数量（包括冲锋鸡） 
    optional int32      total_gold              = 8;                //总分
   	optional int32      hu_cardid               = 9;                //胡牌的id
}

message Detail {
    repeated DetailItem result_list             = 1;      
}


//广播请求
message C2GS_RoundResultBroadcast {
}

//一局结算广播
message GS2C_RoundResultBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    repeated ResultItem result_list             = 2; 
    optional int32      fanpaiji_cardid         = 3;                //翻牌鸡的id
    optional int32      is_huangzhuang          = 4;                //是否黄庄
    optional Detail     details                 = 5;                //算分详情
}


////////////////////////////////////////////////////////


message ResultTotalItem {
    required int64        uid                     = 1;
    repeated int32        score_round             = 2;
    optional int32        total_fen               = 3;                //输赢总分数
}

//广播请求
message C2GS_ResultTotalBroadcast {
}

//一局结算广播
message GS2C_ResultTotalBroadcast {
    required int32              errorcode               = 1 [default = 0];  //结果（成功==0）
    repeated ResultTotalItem    result_list             = 2;                              
}

////////////////////////////////////////////////////////


message ResultPKItem {
    required int64        uid                     = 1;
    repeated int32        pk_score_round          = 2;                  //我输给这个人，数组元素值为负，我赢了这个人元素值为正
}

//广播请求
message C2GS_ResultPKBroadcast {
}

//一局结算广播
message GS2C_ResultPKBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    repeated ResultPKItem       pk_list         = 2;                //长度为3的一个数组                              
}

////////////////////////////////////////////////////////
////////////////////////////////////////////////////////

//询问定缺广播请求
message C2GS_AskDingQueBroadcast {
}

//询问定缺广播
message GS2C_AskDingQueBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0） 
}

////////////////////////////////////////////////////////

//定缺请求
message C2GS_DingQue {
    required int32      QueMen                  = 1;                //缺哪一门（1万，2条，3筒）
}

//定缺响应
message GS2C_DingQue {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
}

////////////////////////////////////////////////////////

//定缺广播请求
message C2GS_DingQueBroadcast {
}

//定缺广播
message GS2C_DingQueBroadcast {
    required int32      errorcode               = 1 [default = 0];  //结果（成功==0）
    required int64      uid                     = 2;
    required int32      QueMen                  = 3;                //缺哪一门（1万，2条，3筒）   
}

////////////////////////////////////////////////////////

